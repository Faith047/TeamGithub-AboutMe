{
	"info": {
		"_postman_id": "e3ab7e20-2bfa-4465-b1ff-b744dd4cac91",
		"name": "APICollection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26147728"
	},
	"item": [
		{
			"name": "New Request",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code should be 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code name should have an OK string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"console.log(jsonData)\r",
							"console.log(jsonData.swagger)\r",
							"console.log(jsonData.tags[\"1\"].name)\r",
							"console.log(jsonData.tags[\"0\"].description)\r",
							"console.log(jsonData.tags[\"2\"].name)\r",
							"console.log(jsonData.tags[\"0\"].name)\r",
							"\r",
							"pm.test(\"Confirm that swagger is 2.0\", function () {  \r",
							"    pm.expect(jsonData.swagger).to.eql(\"2.0\");\r",
							"});\r",
							"\r",
							"pm.test(\"Confirm that tag with Pets is present\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"0\");\r",
							"});\r",
							"\r",
							"pm.test(\"Confirm that tag with description of 'Everything about your Pets' is 0\", function () {  \r",
							"    pm.expect(jsonData.tags[\"0\"].description).to.eql('Everything about your Pets');\r",
							"});\r",
							"\r",
							"pm.test(\"Confirm that tag with store is present\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"1\");\r",
							"});\r",
							"\r",
							"pm.test(\"Confirm that tag with user is present\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"2\");\r",
							"});\r",
							"\r",
							"/**\r",
							" * \r",
							" * pm.test(\"Body is correct\", function () {\r",
							"    pm.response.to.have.body(\"response_body_string\");\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"string_you_want_to_search\");\r",
							"});\r",
							" */\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://petstore.swagger.io/v2/swagger.json",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"swagger.json"
					]
				}
			},
			"response": []
		},
		{
			"name": "swagger API Test updated",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code should be 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code name should have an OK string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"console.log(jsonData)\r",
							"console.log(jsonData.swagger)\r",
							"console.log(jsonData.tags[\"1\"].name)\r",
							"console.log(jsonData.tags[\"0\"].description)\r",
							"console.log(jsonData.tags[\"2\"].name)\r",
							"console.log(jsonData.tags[\"0\"].name)\r",
							"\r",
							"pm.test(\"Confirm that swagger is 2.0\", function () {  \r",
							"    pm.expect(jsonData.swagger).to.eql(\"2.0\");\r",
							"});\r",
							"\r",
							"pm.test(\"Confirm that tag with Pets is present\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"0\");\r",
							"});\r",
							"\r",
							"pm.test(\"Confirm that tag with description of 'Everything about your Pets' is 0\", function () {  \r",
							"    pm.expect(jsonData.tags[\"0\"].description).to.eql('Everything about your Pets');\r",
							"});\r",
							"\r",
							"pm.test(\"Confirm that tag with store is present\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"1\");\r",
							"});\r",
							"\r",
							"pm.test(\"Confirm that tag with user is present\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"2\");\r",
							"});\r",
							"\r",
							"/**\r",
							" * \r",
							" * pm.test(\"Body is correct\", function () {\r",
							"    pm.response.to.have.body(\"response_body_string\");\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"string_you_want_to_search\");\r",
							"});\r",
							" */\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://petstore.swagger.io/v2/swagger.json",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"swagger.json"
					]
				}
			},
			"response": []
		},
		{
			"name": "swagger API Test",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"console.log(jsonData.tags[\"0\"].name)\r",
							"console.log(jsonData.tags[\"1\"].name)\r",
							"console.log(jsonData.tags[\"2\"].name)\r",
							"console.log(jsonData.swagger)\r",
							"console.log(jsonData.tags[\"0\"].description)\r",
							"\r",
							"pm.environment.set(\"entityName\",jsonData.tags[\"0\"].name);\r",
							"pm.environment.set(\"entityName\",jsonData.tags[\"1\"].name);\r",
							"pm.environment.set(\"entityName\",jsonData.tags[\"2\"].name);\r",
							"pm.environment.set(\"jsonData\",jsonData.swagger);\r",
							"pm.environment.set(\"entityDescription\",jsonData.tags[\"0\"].description);\r",
							"\r",
							"  \r",
							"pm.test(\"Status code should be 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code name should have an OK string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"console.log(jsonData)\r",
							"console.log(jsonData.swagger)\r",
							"console.log(jsonData.tags[\"1\"].name)\r",
							"console.log(jsonData.tags[\"0\"].description)\r",
							"console.log(jsonData.tags[\"2\"].name)\r",
							"console.log(jsonData.tags[\"0\"].name)\r",
							"\r",
							"pm.test(\"Confirm that swagger is 2.0\", function () {  \r",
							"    pm.expect(jsonData.swagger).to.eql(\"2.0\");\r",
							"});\r",
							"\r",
							"pm.test(\"Confirm that tag with Pets is present\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"0\");\r",
							"});\r",
							"\r",
							"pm.test(\"Confirm that tag with description of 'Everything about your Pets' is 0\", function () {  \r",
							"    pm.expect(jsonData.tags[\"0\"].description).to.eql('Everything about your Pets');\r",
							"});\r",
							"\r",
							"pm.test(\"Confirm that tag with store is present\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"1\");\r",
							"});\r",
							"\r",
							"pm.test(\"Confirm that tag with user is present\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"2\");\r",
							"});\r",
							"\r",
							"/**\r",
							" * \r",
							" * pm.test(\"Body is correct\", function () {\r",
							"    pm.response.to.have.body(\"response_body_string\");\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"string_you_want_to_search\");\r",
							"});\r",
							" */\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"name\", \"variable_value\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}swagger.json?swagger.json_name={{entityName}}&swagger.json_description={{description}}",
					"host": [
						"{{baseUrl}}swagger",
						"json"
					],
					"query": [
						{
							"key": "swagger.json_name",
							"value": "{{entityName}}"
						},
						{
							"key": "swagger.json_description",
							"value": "{{description}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "TeamGithub Task 8",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code should be 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code name should have an OK string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"console.log(jsonData)\r",
							"console.log(jsonData.swagger)\r",
							"console.log(jsonData.tags[\"1\"].name)\r",
							"console.log(jsonData.tags[\"0\"].description)\r",
							"console.log(jsonData.tags[\"2\"].name)\r",
							"console.log(jsonData.tags[\"0\"].name)\r",
							"\r",
							"pm.test(\"Confirm that swagger is 2.0\", function () {  \r",
							"    pm.expect(jsonData.swagger).to.eql(\"2.0\");\r",
							"});\r",
							"\r",
							"pm.test(\"Confirm that tag with Pets is present\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"0\");\r",
							"});\r",
							"\r",
							"pm.test(\"Confirm that tag with description of 'Everything about your Pets' is 0\", function () {  \r",
							"    pm.expect(jsonData.tags[\"0\"].description).to.eql('Everything about your Pets');\r",
							"});\r",
							"\r",
							"pm.test(\"Confirm that tag with store is present\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"1\");\r",
							"});\r",
							"\r",
							"pm.test(\"Confirm that tag with user is present\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"2\");\r",
							"});\r",
							"\r",
							"/**\r",
							" * \r",
							" * pm.test(\"Body is correct\", function () {\r",
							"    pm.response.to.have.body(\"response_body_string\");\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"string_you_want_to_search\");\r",
							"});\r",
							" */\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://petstore.swagger.io/v2/swagger.json",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"swagger.json"
					]
				}
			},
			"response": []
		}
	]
}